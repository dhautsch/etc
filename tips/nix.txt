Bash to forget history
export HISTSIZE=0

getfacl file1 | setfacl --set-file=- file2

# set putty terminal label in windows
perl -e 'print "\033]0;'`uname -n `'\007"'

# disable sudo timeout
export TMOUT=0

alias ps='ps -efH' # display processes as tree

alias lf='ls -FCa'
alias ll='ls -lart'

#!/bin/bash
scratch=$(mktemp -d -t tmp.XXXXXXXXXX)
function finish {
  rm -rf "$scratch"
}
trap finish EXIT
trap "rm -rf $HACK" EXIT SIGHUP SIGINT SIGQUIT

#
# Print all the lines between 10 and 20 of a file
#
sed -n '10,20p' <filename>

#
# To print a specific line from a file
#
sed -n 5p <file>

#
# call webserver with cookies
#
wget --spider --load-cookies=cookie.txt --save-cookies=cookie.txt 'http://host/cgi-bin/x?x=1&y=2&z=3'


#
# AES encryption on Sun Solaris
#
# Following are steps to:
# 1) create 128 AES key file
# 2) encrypt clear.txt to crypt.txt
# 3) decrypt crypt.txt
#
# Note the key file is read only and it does not appear to work with setfacl to make it readable by others
#
KEY_FILE=/export/appl/website/https-dstate-etl08EME/run/cgi-bin/key.aes
pktool genkey keystore=file outkey=$(basename $KEY_FILE) keytype=aes keylen=128 dir=$(dirname $KEY_FILE)
encrypt -a aes -k $KEY_FILE -i clear.txt -o crypt.txt
decrypt -a aes -k $KEY_FILE -i crypt.txt

#
# This works for short messages ~ 255 bytes
# Following converts rsa pub key to pem
ssh-keygen -f ~/.ssh/a22rpt.pub -e -m PKCS8 > a22rpt.pem.pub

openssl rsautl -encrypt -pubin -inkey a22rpt.pem.pub -ssl -in myMessage.txt -out myEncryptedMessage.txt

openssl rsautl -decrypt -inkey ~/.ssh/a22rpt -in myEncryptedMessage.txt # to stdout
openssl rsautl -decrypt -inkey ~/.ssh/a22rpt -in myEncryptedMessage.txt -out myDecryptedMessage.txt
