--- To list all tables owned by the current user, type: 
select tablespace_name, table_name from user_tables; 

--- To list all tables in a database: 
select tablespace_name, table_name from dba_tables; 

--- To list all tables accessible to the current user, type: 
select tablespace_name, table_name from all_tables;

--- To describe a table, type: 
desc <table_name> 

--- Get tables columns and types
select column_name, data_type, data_length, nullable from user_tab_columns

--
-- regex http://www.dba-oracle.com/t_regular_expressions.htm
--
select * from services where regexp_like(host_name, '[dt]lp-[[:alnum:]]+-a001.') 

-- WITH clause to simplify complex SQL
WITH
subquery_name
AS
(the aggregation SQL statement)
SELECT
(query naming subquery_name);

-- get user/sid
SELECT user || '@' || SYS_CONTEXT('USERENV','DB_NAME') from dual

--- ISO timestamp
select to_char(sysdate, 'YYYY-MM-DD"T"HH24:MI:SS') from dual
select to_date('2015-11-24 00:00:00', 'YYYY-MM-DD HH24:MI:SS') from dual

--- Implicit Cursor FOR LOOP Statement
BEGIN
  FOR item IN (
    SELECT last_name, job_id
    FROM employees
    WHERE job_id LIKE '%CLERK%'
    AND manager_id > 120
    ORDER BY last_name
  )
  LOOP
    DBMS_OUTPUT.PUT_LINE
      ('Name = ' || item.last_name || ', Job = ' || item.job_id);
  END LOOP;
END;
/

--- Correlated Update
--- Updates only those employees who work in Geneva or Munich (locations 2900 and 2700)
--- Sets department_id for these employees to the department_id corresponding to Bombay (location_id 2100)
--- Sets each employee's salary to 1.1 times the average salary of their department
--- Sets each employee's commission to 1.5 times the average commission of their department
UPDATE employees a 
    SET department_id = 
        (SELECT department_id 
            FROM departments 
            WHERE location_id = '2100'), 
        (salary, commission_pct) = 
        (SELECT 1.1*AVG(salary), 1.5*AVG(commission_pct) 
          FROM employees b 
          WHERE a.department_id = b.department_id) 
    WHERE department_id IN 
        (SELECT department_id 
          FROM departments
          WHERE location_id = 2900 
              OR location_id = 2700); 

--- display a window of results based on the rownum
select *
from
( select rownum rnum, a.*
from (your_query) a
where rownum <= :M )
where rnum >= :N;

-- upsert
MERGE INTO services s
USING dual
ON (env_name = 'Domain_Multi_mdev1_961' and domain_name = 'Domain_Multi_mdev1' and service_name = 'FILES' and host_name = 'dlmulti-ap101')
WHEN MATCHED THEN
  UPDATE SET date_processes = 'Tue Sep 22 17:02:22 EDT 2015', status = 'Available and backed up'
WHEN NOT MATCHED THEN
  INSERT (env_name, domain_name, service_name, host_name, date_processes, status)
  VALUES ('Domain_Multi_mdev1_961', 'Domain_Multi_mdev1', 'FILES', 'dlmulti-ap101', 'Tue Sep 22 17:02:22 EDT 2015', 'Available and backed up')

-- Dump as XML
sqlplus /NOLOG
SQL> CONN <user>/<pass>@<sid>;
SQL> set linesize 150;
SQL> set long 9999999;
SQL> set head off;
SQL> select dbms_xmlgen.getxml('select * from C_REPOS_DATABASE') xml from dual;

-- Dump as html
SET PAGESIZE 20000;
SET MARKUP HTML ON SPOOL ON PREFORMAT OFF ENTMAP ON;
select * from user_tables
